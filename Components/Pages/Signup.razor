@page "/signup"
@using System.ComponentModel.DataAnnotations
@using CVLD_POE.Components.Models

<link href="css/Signup.css" rel="stylesheet" />

<h3>Signup</h3>

<EditForm Model="newUser" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="newUser.Username" />
        <ValidationMessage For="@(() => newUser.Username)" />
    </div>

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="newUser.Email" />
        <ValidationMessage For="@(() => newUser.Email)" />
    </div>

    <div>
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="newUser.Password" type="password" />
        <ValidationMessage For="@(() => newUser.Password)" />
    </div>

    <div>
        <label for="confirmPassword">Confirm Password:</label>
        <InputText id="confirmPassword" @bind-Value="newUser.ConfirmPassword" type="password" />
        <ValidationMessage For="@(() => newUser.ConfirmPassword)" />
    </div>

    <button type="submit">Signup</button>
</EditForm>

@code {
    private User newUser = new User();

    /*private void HandleValidSubmit()
    {
        // Save newUser to the database
        Console.WriteLine("User registered successfully!");
        // Implement your storage logic here (e.g., Azure Table Storage)
    }
    */

    private class User
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters long.")]
        public string Password { get; set; }

        [Required(ErrorMessage = "Confirm Password is required.")]
        [Compare(nameof(Password), ErrorMessage = "Passwords do not match.")]
        public string ConfirmPassword { get; set; }
    }
}
